def load(hex_str):
    """Convert a hex string to a byte array."""
    return bytes.fromhex(hex_str)

def otp(data, key):
    """Perform XOR (one-time pad) between data and key."""
    return bytes(data[i] ^ key[i % len(key)] for i in range(len(data)))

def main():
    # Load the data and key as byte arrays
    data = load("15b279d8c0fdbd7d4a8eea255876a0fd189f4fafd4f4124dafae47cb20a447308e3f77995d3c")
    key = load("73de18bfbb99db4f7cbed3156d40959e7aac7d96b29071759c9b70fb18947000be5d41ab6c41")

    # Perform the XOR operation
    decrypted_bytes = otp(data, key)

    try:
        # Attempt to decode the result to a UTF-8 string
        decrypted_text = decrypted_bytes.decode('utf-8')
        print(f"Decrypted text: {decrypted_text}")
    except UnicodeDecodeError:
        # If decoding fails, print the raw byte data as hex
        print(f"Decrypted bytes (hex): {decrypted_bytes.hex()}")

if __name__ == "__main__":
    main()